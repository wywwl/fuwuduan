<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jk.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.jk.model.Comment" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="uid" property="uid" jdbcType="VARCHAR" />

    <result column="praiseCount" property="praiseCount" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="courseid" property="courseid" jdbcType="VARCHAR" />
    <result column="addTime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="pid" property="pid" jdbcType="VARCHAR" />
    <result column="likeNumber" property="likenumber" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, email, content, courseid, addTime, pid, likeNumber
  </sql>
  <sql id="edu_comment_property">
		#{id},
		#{uid},
		#{content},
		#{addtime},
		#{commentNumber},
		#{praiseCount},
		#{likenumber},
		#{bid}
	</sql>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_comment
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_comment
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jk.model.Comment" >
    insert into t_comment (id, email, content, 
      courseid, addTime, pid, 
      likeNumber)
    values (#{id,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{courseid,jdbcType=VARCHAR}, #{addtime,jdbcType=TIMESTAMP}, #{pid,jdbcType=VARCHAR}, 
      #{likenumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jk.model.Comment" >
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="courseid != null" >
        courseid,
      </if>
      <if test="addtime != null" >
        addTime,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="likenumber != null" >
        likeNumber,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null" >
        #{courseid,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="likenumber != null" >
        #{likenumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk.model.Comment" >
    update t_comment
    <set >
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null" >
        courseid = #{courseid,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        addTime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="likenumber != null" >
        likeNumber = #{likenumber,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk.model.Comment" >
    update t_comment
    set email = #{email,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      courseid = #{courseid,jdbcType=VARCHAR},
      addTime = #{addtime,jdbcType=TIMESTAMP},
      pid = #{pid,jdbcType=VARCHAR},
      likeNumber = #{likenumber,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

<!--   查询评论-->
  <select id="queryComment" parameterType="String" resultType="com.jk.model.Comment">

    select id as id,pid,email,content, likeNumber as likenumber,date_format(addTime,"%Y-%m-%d") as addtime ,uid as uid,bid as bid from t_comment tc where tc.bid = #{bid} and tc.pid=#{pid}

  </select>

    <!--   查询博客-->
    <select id="getBlogData" parameterType="com.jk.model.Blog" resultType="com.jk.model.Blog">

     SELECT *  FROM T_BLOG
  </select>

    <insert id="addContent" parameterType="com.jk.model.Comment"    useGeneratedKeys="true" keyProperty="id" keyColumn="id" >
    insert into t_comment   (id,content,addtime,bid ,aid,likenumber) VALUES
      (  #{comment.id},
		#{comment.content},
		now(),
		#{comment.bid} ,
		#{comment.aid},
		 0)
</insert>

  <insert id="saveComment" parameterType="com.jk.model.Comment"    useGeneratedKeys="true" keyProperty="id" keyColumn="id" >
    insert into t_comment   (uid,content,addtime,bid ,likenumber) VALUES
      (#{uid},
		#{content},
		now(),
		#{bid} ,
		 0)


  </insert>
  <update id="addPraise" parameterType="Integer" >
    update t_comment
    set   praiseCount = praiseCount+1
    where id = #{id,jdbcType=VARCHAR}
  </update>


    <select id="queryAdminComment" resultType="com.jk.model.Comment"  parameterType="com.jk.model.Comment">
            select id as id,pid,email,content, pCommentId,likeNumber as likenumber,str_to_date(addTime,"%Y-%m-%d") as addtime ,uid as uid,bid as bid from t_comment tc
       <where>
        <if test="content!=null and content!=''">
            and  tc.content like  concat('%',#{content},'%')
        </if>
        <if test="beginDate!=null and beginDate!=''">
            and tc.addtime <![CDATA[>=]]> str_to_date(#{beginDate},"%Y-%m-%d")
        </if>
        <if test="endDate!=null and endDate!=''">
            and tc.addtime <![CDATA[<=]]> str_to_date(#{endDate},"%Y-%m-%d")
        </if>
    </where>
     order by tc.likenumber desc    limit #{startIndex},#{endIndex}
    </select>


  <select id="getCommentByPage" parameterType="com.jk.model.Comment" resultType="com.jk.model.Comment">

    select id as id,pid,email,content, likeNumber as likenumber,date_format(addTime,"%Y-%m-%d") as addtime ,uid as uid,bid as bid from t_comment tc
    where pCommentId =#{pCommentId}
  </select>


    <delete id="dels" parameterType="list">
        delete from t_comment where id in
        (
        <foreach collection="list" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
    </delete>

    <delete id="del" parameterType="String">
    delete from t_comment where id in
    (#{id})
    </delete>
</mapper>